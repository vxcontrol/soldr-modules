{
    "additionalProperties": false,
    "properties": {
        "file_size_limit": {
            "default": 512,
            "maximum": 1024,
            "rules": {
                "customRule": [
                    {
                        "errMsg": "Common.Pseudo.ValidationText.Required",
                        "script": "dx: {{$root.analysis_depth}} !== ''"
                    }
                ],
                "maximum": {
                    "errMsg": "Common.Pseudo.ValidationText.MaxValue",
                    "value": 1024
                },
                "minimum": {
                    "errMsg": "Common.Pseudo.ValidationText.MinValue",
                    "value": 0
                },
                "required": {
                    "errMsg": "Common.Pseudo.ValidationText.Required",
                    "value": true
                }
            },
            "type": "integer",
            "ui": {
                "widgetConfig": {
                    "placeholder": "dx: window.__$ncform.lang == 'en' ? 'size in MB from 0 to 1024 [default 512]' : 'размер файла в МБ от 10 до 1024 [по умолчанию 512]'"
                }
            }
        },
        "request_config": {
            "default": {
                "method": "POST",
                "url": ""
            },
            "properties": {},
            "required": [],
            "rules": {
                "customRule": [
                    {
                        "errMsg": "It must match to (http|https)://HOST:PORT regexp or be empty",
                        "script": "dx: /^((http|https):\\/\\/)?([^:\\/ ]*(:[0-9]{2,5})?)[^ ]*$/.test({{$root.request_config.url}})"
                    }
                ]
            },
            "type": "object",
            "ui": {
                "widget": "input",
                "widgetConfig": {
                    "compound": {
                        "prependSelect": {
                            "enumSource": [
                                {
                                    "label": "HTTP PUT",
                                    "value": "PUT"
                                },
                                {
                                    "label": "HTTP POST",
                                    "value": "POST"
                                }
                            ],
                            "itemLabelField": "label",
                            "itemValueField": "value",
                            "modelField": "method"
                        }
                    },
                    "modelField": "url",
                    "placeholder": "https://example.com"
                }
            }
        },
        "request_to_minio_config": {
            "default": {
                "url": "http://minio.local:9000"
            },
            "properties": {},
            "required": [],
            "rules": {
                "customRule": [
                    {
                        "errMsg": "It must match to (http|https)://HOST:PORT regexp or be empty",
                        "script": "dx: /^((http|https):\\/\\/)?([^:\\/ ]*(:[0-9]{2,5})?)[^ ]*$/.test({{$root.request_config.url}})"
                    }
                ]
            },
            "type": "object",
            "ui": {
                "widget": "input",
                "widgetConfig": {
                    "modelField": "url",
                    "placeholder": "https://example.com"
                }
            }
        },
        "s3_access_key": {
            "default": "accesskey",
            "rules": {
                "customRule": [
                    {
                        "errMsg": "Common.Pseudo.ValidationText.Required",
                        "script": "dx: {{$root.analysis_depth}} !== ''"
                    }
                ],
                "required": {
                    "errMsg": "Common.Pseudo.ValidationText.Required",
                    "value": true
                }
            },
            "type": "string",
            "ui": {
                "widgetConfig": {
                    "placeholder": "dx: window.__$ncform.lang == 'en' ? 'S3 access key [default \"access key\"]' : 'S3 access key [по-умолчанию \"access key\"]'"
                }
            }
        },
        "s3_secret_key": {
            "default": "secretkey",
            "rules": {
                "customRule": [
                    {
                        "errMsg": "Common.Pseudo.ValidationText.Required",
                        "script": "dx: {{$root.analysis_depth}} !== ''"
                    }
                ],
                "required": {
                    "errMsg": "Common.Pseudo.ValidationText.Required",
                    "value": true
                }
            },
            "type": "string",
            "ui": {
                "widgetConfig": {
                    "placeholder": "dx: window.__$ncform.lang == 'en' ? 'S3 secret key [default \"secret key\"]' : 'S3 secret key [по-умолчанию \"secret key\"]'"
                }
            }
        },
        "s3_bucket": {
            "default": "soldr-file-uploader",
            "rules": {
                "customRule": [
                    {
                        "errMsg": "Common.Pseudo.ValidationText.Required",
                        "script": "dx: {{$root.analysis_depth}} !== ''"
                    }
                ],
                "required": {
                    "errMsg": "Common.Pseudo.ValidationText.Required",
                    "value": true
                }
            },
            "type": "string",
            "ui": {
                "widgetConfig": {
                    "placeholder": "dx: window.__$ncform.lang == 'en' ? 'S3 bucket name [default \"soldr-file-uploader\"]' : 'название директории S3 [по-умолчанию \"soldr-file-uploader\"]'"
                }
            }
        },
        "request_headers": {
            "items": {
                "properties": {
                    "name": {
                        "rules": {
                            "customRule": [
                                {
                                    "errMsg": "HTTP header name format invalid",
                                    "script": "dx: /^[^()\u003c\u003e@,;:\"/\\[\\]\\?={} \t!#%\u0026*]+$/.test({{$root.request_headers[i].name}})"
                                }
                            ]
                        },
                        "type": "string",
                        "ui": {
                            "columns": 4,
                            "label": "",
                            "linkFields": [
                                {
                                    "fieldPath": "request_headers",
                                    "rules": [
                                        "customRule"
                                    ]
                                }
                            ]
                        }
                    },
                    "value": {
                        "type": "string",
                        "ui": {
                            "columns": 8,
                            "label": ""
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "rules": {},
                "type": "object",
                "ui": {
                    "label": "dx: {{$root.request_headers[i].name}} ? {{$root.request_headers[i].name}} + ': ' + {{$root.request_headers[i].value}} : 'header_' + (parseInt(idxChain)+1)"
                }
            },
            "rules": {
                "customRule": [
                    {
                        "errMsg": "HTTP header name should not be empty",
                        "script": "dx: ({{$root.request_headers}} || []).every(header =\u003e header.name !== '')"
                    }
                ]
            },
            "type": "array",
            "ui": {
                "showIdxLabel": false,
                "widgetConfig": {
                    "collapsed": true,
                    "disableReorder": true,
                    "itemCollapse": true,
                    "requiredDelConfirm": true
                }
            }
        }
    },
    "required": [],
    "type": "object"
}
